#+TITLE: hass
~hass~ enables you to control Home Assistant entities from Emacs.

*This package is under heavy development and will change.*

* Installation
** straight.el
#+BEGIN_SRC emacs-lisp
(straight-use-package
  '(hass
    :type git
    :host github
    :repo "purplg/hass"))
#+END_SRC

* Configuration
Both ~hass-url~ and ~hass-apikey~ must be set to use this package
#+BEGIN_SRC emacs-lisp :results none
(setq hass-url "https://192.168.1.10:8123"
      hass-apikey "APIKEY-GOES-IN-HERE")
#+END_SRC

Alternatively, you can store a lambda function inside ~hass-apikey~. This will be executed on every
query.
#+BEGIN_SRC emacs-lisp :results none
(setq hass-apikey (lambda () (auth-source-pass-get 'secret "home/hass/emacs-apikey")))
#+END_SRC

The ~hass-entity~ variable is used when the ~hass-query-all-entities~ function is called. It should
contain a list of strings of entity ID's for each entity you want included.

* Usage
To call a service on Home Assistant, use the ~hass-call-service~ function. ~hass-call-service~ has 2
required arguments: ~entity-id~ and ~service~. The domain of the service is detected from
the ~entity-id~. For example, ~switch.bedroom_light~ is in the ~switch~ domain. Currently, the only
valid services available are ~turn-on~, ~turn-off~, and ~toggle~ and the only supported domains are
~switch~ and ~input_boolean~.

#+BEGIN_SRC emacs-lisp
(hass-call-service "switch.bedroom_light" 'toggle)
#+END_SRC

** Hooks

There are currently two hooks available. ~hass--entity-state-change-hook~ called when the state of
an entity is updated, regardless of if it changed or not and ~hass--service-called-hook~ when a
service (for example ~hass-switch-toggle~) is called.
